configfile: "scripts/config/config.yaml",

##### Load the rules #####

rule all:
        input:
                expand("results/fastqc_init/{sample}_fastqc.zip", sample = config["samples"]),
                expand("results/fastqc_init/{sample}_fastqc.html", sample = config["samples"]),
		expand("results/trim/{subsample}_1_trim_paired.fastq.gz", subsample = config["subsamples"]),
		expand("results/trim/{subsample}_1_trim_unpaired.fastq.gz", subsample = config["subsamples"]),
		expand("results/trim/{subsample}_2_trim_paired.fastq.gz", subsample = config["subsamples"]),
		expand("results/trim/{subsample}_2_trim_unpaired.fastq.gz", subsample = config["subsamples"]),
                expand("results/fastqc_post/{sample}_trim_paired_fastqc.zip", sample = config["samples"]),
                expand("results/fastqc_post/{sample}_trim_paired_fastqc.html", sample = config["samples"]),
		expand("results/bowtie2/{subsample}_trim_mapped_sorted_q2.bam", subsample = config["subsamples"]),
                expand("results/bowtie2/{subsample}_trim_mapped_sorted_q2.bam.bai", subsample = config["subsamples"]),
                expand("results/bowtie2/{subsample}.log", subsample = config["subsamples"]),
		expand("results/picard/{subsample}_trim_mapped_sorted_q2_nodup.bam", subsample = config["subsamples"]),
                expand("results/picard/{subsample}_trim_mapped_sorted_q2_nodup.bam.bai", subsample = config["subsamples"]),
                expand("results/picard/{subsample}_trim_mapped_sorted_q2_dups.txt", subsample = config["subsamples"]),
                expand("results/picard/{subsample}_trim_mapped_sorted_q2.log", subsample = config["subsamples"]),
		expand("results/deeptools/{subsample}_multiBamSum.npz", subsample = config["multibam"]),
		expand("results/deeptools/{subsample}_heatmap-pearson.pdf", subsample = config["multibam"]),
		expand("results/deeptools/{subsample}_heatmap-pearson.tab", subsample = config["multibam"]),
		expand("results/MACS2/{subsample}_trim_mapped_sorted_q2_nodup_model.r", subsample = config["subsamples"]),
                expand("results/MACS2/{subsample}_trim_mapped_sorted_q2_nodup_peaks.narrowPeak", subsample = config["subsamples"]),
                expand("results/MACS2/{subsample}_trim_mapped_sorted_q2_nodup_peaks.xls", subsample = config["subsamples"]),
                expand("results/MACS2/{subsample}_trim_mapped_sorted_q2_nodup_summits.bed", subsample = config["subsamples"]),
		expand("results/bedtools/ss_50k_0h_{subsample0}_trim_mapped_sorted_q2_nodup_combined_peaks.narrowPeak", subsample0 = config["zero"]),
		expand("results/bedtools/ss_50k_24h_{subsample24}_trim_mapped_sorted_q2_nodup_combined_peaks.narrowPeak", subsample24 = config["vingtquatre"]),
		expand("results/bedtools/ss_50k_{subsample}_trim_mapped_sorted_q2_nodup_common.bed", subsample = config["rep"]),
                expand("results/bedtools/ss_50k_{subsample}_trim_mapped_sorted_q2_nodup_0h_unique.bed", subsample = config["rep"]),
                expand("results/bedtools/ss_50k_{subsample}_trim_mapped_sorted_q2_nodup_24h_unique.bed", subsample = config["rep"])

rule fastqc_init:
        input:
                "data/subset/{sample}.fastq.gz"
        output:
                html = "results/fastqc_init/{sample}_fastqc.html",
                zip  = "results/fastqc_init/{sample}_fastqc.zip"
        conda:
                "envs/qc.yaml"
        threads: 2
        log:
                "logs/fastqc_init_{sample}.log"
        message:
                "Executing Initial Quality Control on : {input}"
        shell:
                """
                mkdir -p results/fastqc_init
                fastqc {input} -o "results/fastqc_init" -t {threads} 2>{log}
                """
rule trim:
	input:
		fwd = "data/subset/{subsample}_1.fastq.gz",
		rev = "data/subset/{subsample}_2.fastq.gz"
	output:
		fwd_paired = "results/trim/{subsample}_1_trim_paired.fastq.gz",
		fwd_unpaired = "results/trim/{subsample}_1_trim_unpaired.fastq.gz",
		rev_paired = "results/trim/{subsample}_2_trim_paired.fastq.gz",
		rev_unpaired = "results/trim/{subsample}_2_trim_unpaired.fastq.gz"
	conda:
		"envs/trim.yaml"
	threads: 6
	log: 
		"logs/trim_{subsample}.log"
	message: 
		"Executing Trimming on : {input}"
	shell:
		"""
		mkdir -p results/trim
		java -jar /home/ubuntu/snakemake/trimmomatic-0.38.jar PE -threads {threads} \
		-trimlog results/trim/trim.log -summary results/trim/stats \
		{input.fwd} {input.rev} \
		{output.fwd_paired} {output.fwd_unpaired} {output.rev_paired} {output.rev_unpaired} \
                ILLUMINACLIP:data/NexteraPE-PE.fa:2:30:10:2:keepBothReads \
		LEADING:3 \
                TRAILING:3 \
                SLIDINGWINDOW:4:15 \
                MINLEN:33
		"""


rule fastqc_post:
        input:
                "results/trim/{sample}_trim_paired.fastq.gz"
        output:
                html = "results/fastqc_post/{sample}_trim_paired_fastqc.html",
                zip  = "results/fastqc_post/{sample}_trim_paired_fastqc.zip"
        conda:
                "envs/qc.yaml"
        threads: 2
        log:
                "logs/fastqc_post_{sample}.log"
        message:
                "Executing Initial Quality Control on : {input}"
        shell:
                """
                mkdir -p results/fastqc_init
                fastqc {input} -o "results/fastqc_post" -t {threads} 2>{log}
                """
rule bowtie2:
	input:
		fwd = "results/trim/{subsample}_1_trim_paired.fastq.gz",
		rev = "results/trim/{subsample}_2_trim_paired.fastq.gz",
		idx_bt2 = "/home/ubuntu/snakemake/data/reference/bowtie2"
	output:
		bam = "results/bowtie2/{subsample}_trim_mapped_sorted_q2.bam",
		bai = "results/bowtie2/{subsample}_trim_mapped_sorted_q2.bam.bai",
		log = "results/bowtie2/{subsample}.log"
	conda:
		"envs/bowtie.yaml"
	threads: 8
	log:
		"logs/bowtie2_{subsample}.log"
	message:
		"Executing Mapping on : {input}"
	shell:
		"""
		mkdir -p results/bowtie2
		bowtie2  --very-sensitive -p 8 -k 10  -x {input.idx_bt2}/all  \
		-1 {input.fwd}  -2 {input.rev} | samtools view -q 2 -bS  - | samtools sort - -o {output.bam}
		samtools index -b {output.bam}
		samtools idxstats {output.bam} > {output.log}
		"""
rule picard : 
	input:
		"results/bowtie2/{subsample}_trim_mapped_sorted_q2.bam"
	output:
		bam = "results/picard/{subsample}_trim_mapped_sorted_q2_nodup.bam",
		bai = "results/picard/{subsample}_trim_mapped_sorted_q2_nodup.bam.bai",
		txt = "results/picard/{subsample}_trim_mapped_sorted_q2_dups.txt",
		log = "results/picard/{subsample}_trim_mapped_sorted_q2.log"
	conda:
		"envs/picards.yaml"
	threads: 6
	log:
		"logs/picard_{subsample}.log"
	message:
		"Executing Mapping cleaning on : {input}"
	shell:
		"""
		mkdir -p results/picard
		java -jar /home/ubuntu/snakemake/picard.jar MarkDuplicates I="{input}" O={output.bam} M={output.txt} REMOVE_DUPLICATES=true
		samtools index -b {output.bam}
		samtools idxstats {output.bam} > {output.log}
		"""
rule array:
	input:
		bam = expand("results/picard/{subsample}_trim_mapped_sorted_q2_nodup.bam", subsample = config["subsamples"])
	output:
		"results/deeptools/{subsample}_multiBamSum.npz"
	conda:
		"envs/deeptools.yaml"
	threads: 2
	log:
		"logs/deeptools_multiBamSum_{subsample}.log"
	message:
		"Executing first data visualisation on : {input}"
	shell:
		"""
		mkdir -p results/deeptools
		multiBamSummary bins --bamfiles {input.bam} -o {output}
		"""

rule deeptools:
	input:
		"/home/ubuntu/snakemake/results/deeptools/data_visu_multiBamSum.npz"
	output:
		pdf = "results/deeptools/{subsample}_heatmap-pearson.pdf",
		tab = "results/deeptools/{subsample}_heatmap-pearson.tab"
	conda:
		"envs/deeptools.yaml"
	threads: 2
	log:
		"logs/deeptools_corr_{subsample}.log"
	message:
		"Visualisation on {input} in a correlation matrix"
	shell:
		"""
		plotCorrelation \
			-in {input} \
			--corMethod pearson --skipZeros \
			--plotTitle "Pearson Correlation of Read coverage" \
			--whatToPlot heatmap --colorMap RdYlBu --plotNumbers \
			-o {output.pdf}   \
			--outFileCorMatrix {output.tab} \
			--removeOutliers
		"""
rule macs2:
	input:
		"results/picard/{subsample}_trim_mapped_sorted_q2_nodup.bam"
	output:
		r = "results/MACS2/{subsample}_trim_mapped_sorted_q2_nodup_model.r",
		nar = "results/MACS2/{subsample}_trim_mapped_sorted_q2_nodup_peaks.narrowPeak",
		xls = "results/MACS2/{subsample}_trim_mapped_sorted_q2_nodup_peaks.xls",
		bed = "results/MACS2/{subsample}_trim_mapped_sorted_q2_nodup_summits.bed"
	conda:
		"envs/macs2.yaml"
	threads: 2
	log:
		"logs/macs2_{subsample}.log"
	message:
		"Identification of DNA access sites on : {input}"
	shell:
		"""
		mkdir -p results/MACS2
		macs2 callpeak -t {input} -n {wildcards.subsample}_trim_mapped_sorted_q2_nodup \
		-f BAM -g mm \
		--outdir "results/MACS2"
		"""

rule concat_zero:
	input:
		expand("results/MACS2/{subsample0}_trim_mapped_sorted_q2_nodup_peaks.narrowPeak", subsample0 = config["subsamples"])
	output:
		"results/bedtools/ss_50k_0h_{subsample0}_trim_mapped_sorted_q2_nodup_combined_peaks.narrowPeak"
	threads: 6
	log:
		"logs/{subsample0}_concat_zero.log"
	message:
		"Concatenation of zero samples on : {input}"
	shell:
		"""
		mkdir -p results/bedtools
		cat {input} > {output}
		"""

rule concat_vingtquatre:
	input:		
		expand("results/MACS2/{subsample24}_trim_mapped_sorted_q2_nodup_peaks.narrowPeak", subsample24 = config["subsamples"])
	output:
		"results/bedtools/ss_50k_24h_{subsample24}_trim_mapped_sorted_q2_nodup_combined_peaks.narrowPeak"
	threads: 6
	log:
		"logs/{subsample24}_concat_vq.log"
	message:
		"Concatenation of twenty four samples on : {input}"
	shell:
		"""
		cat {input} > {output}
		"""

rule intersect_common:
	input:
		zero = "results/bedtools/ss_50k_0h_{subsample}_trim_mapped_sorted_q2_nodup_combined_peaks.narrowPeak",
		vingtquatre = "results/bedtools/ss_50k_24h_{subsample}_trim_mapped_sorted_q2_nodup_combined_peaks.narrowPeak"
	output:
		"results/bedtools/ss_50k_{subsample}_trim_mapped_sorted_q2_nodup_common.bed"
	conda:
		"envs/bedtools.yaml"
	threads: 6
	log:
		"logs/{subsample}_common.log"
	message:
		"Identification of common sites : {input}"
	shell:
		"""
		bedtools intersect -a {input.zero} -b {input.vingtquatre} > {output}
		"""

rule intersect_0h_unique:
        input:
                zero = "results/bedtools/ss_50k_0h_{subsample}_trim_mapped_sorted_q2_nodup_combined_peaks.narrowPeak",
                vingtquatre = "results/bedtools/ss_50k_24h_{subsample}_trim_mapped_sorted_q2_nodup_combined_peaks.narrowPeak"
        output:
                "results/bedtools/ss_50k_{subsample}_trim_mapped_sorted_q2_nodup_0h_unique.bed"
        conda:
                "envs/bedtools.yaml"
        threads: 6
        log:
                "logs/{subsample}_0h_unique.log"
        message:
                "Identification of 0h unique sites : {input}"
        shell:
                """
                bedtools intersect -v -a {input.zero} -b {input.vingtquatre} > {output}
		"""

rule intersect_24h_unique:
        input:
                zero = "results/bedtools/ss_50k_0h_{subsample}_trim_mapped_sorted_q2_nodup_combined_peaks.narrowPeak",
                vingtquatre = "results/bedtools/ss_50k_24h_{subsample}_trim_mapped_sorted_q2_nodup_combined_peaks.narrowPeak"
        output:
                "results/bedtools/ss_50k_{subsample}_trim_mapped_sorted_q2_nodup_24h_unique.bed"
        conda:
                "envs/bedtools.yaml"
        threads: 6
        log:
                "logs/{subsample}_24h_unique.log"
        message:
                "Identification of 24h unique sites : {input}"
        shell:
                """
                bedtools intersect -v -a {input.vingtquatre} -b {input.zero} > {output}
                rm results/bedtools/*_R2_*
                rm results/bedtools/*_R3_*
                """
